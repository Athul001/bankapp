
                                        Angular


Data Sharing
-------

html   ts
view   component


Data Binding
-----------------

1.  One Way Binding
        
        1.1 Component to View 
            1.1.1 String Interpollation {{}}
            1.1.2 Property Binding      [property]="value"

        1.2 View to Component
            1.1.1 Event Binding         (event name)="methodname()"
            1.1.2 $Event Binding        (event name)="methodname($event)" 
            1.2.3 Event Binding using template reference variable   #variable_name

2. Two way bimding

        2.1 NgModel    Formsmodule ( a module in NgModel)     [(NgModel)]="value"

Routing in angular
--------------------
        navigateByUrl             
                      is a method of class router 

Dependency Injection
------------------------------

To share datas between two classes
inside constructor

acessspecifier(public/private) variable:ClassName


Angular services
-------------------------------
to store datas ( redundant data)



Angular directives
-----------------------

1. structural directives  -   To acess array/object in html
                              to handle structured datas in view of a component
                              can directly apply in html to access elements from array
                                     - *ngFor
                                     - *ngIf


Form Validation in Angular
-------------------------------

1. Template Driven method  -   first html form then apply validation


2. Model Driven method     -   a model create for form in ts then apply validation methods.
                               ReactiveFormModule   - module used for model form creation
                               for advanced validation
                               import from Reactive Form Module(in app.module.ts)

                               FormBuilder    - class in reactive form for model form creation

                                A model form contain 
                                        -form group
                                        -array
                                        -controler


can access the output of input atribute   ( to show the errors in the form feilds)

      cmd-    this.registerForm.get('uname')?.errors && this.loginForm.get('uname')?.touched "

          match with rule  -- empty
          not match        -- content

Local Storage in Angular
--------------------------

setItem-to store data in local storage  
getItem-to get data from local storage 
removeItem-to remove data from local storage

Parent Child communication
----------------------------
      parent--> child communication
      child--> parent communication

eg: 
        dashboard-->parent -@input
        delete -->child @0utput

Angular Pipes
--------------------------
Use pipes to transform strings, currency amounts, dates, and other data for display. 
Pipes are simple functions to use in template expressions to accept an input value and return a transformed value.
Pipes are useful because you can use them throughout your application, 
while only declaring each pipe once. For example, 
you would use a pipe to show a date as April 15, 1988 rather than the raw string format.


